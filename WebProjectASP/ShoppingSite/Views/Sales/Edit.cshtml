@model ShoppingSite.Models.SaleEditViewModel
@{
	ViewBag.Title = "Edit Sale";
	Layout = (ViewBag.LayoutFile != null) ? ViewBag.LayoutFile : Layout;
}
<div class="page-header">
    <h2>Edit Sale</h2>
</div>
@using(Html.BeginForm("Edit", "Sales", FormMethod.Post)) {
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		
		@Html.ValidationSummary(false, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.SaleID)
		<div class="form-group">
			<div class="col-md-12">
                @Html.LabelFor(model => model.SaleName, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align: left" })
				@Html.EditorFor(model => model.SaleName, new { htmlAttributes = new { @class = "form-control col-md-10", @value = Model.SaleName } })
				@Html.ValidationMessageFor(model => model.SaleName, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			
			<div class="col-md-12">
                @Html.LabelFor(model => model.Emblem, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align: left" })
				@Html.EditorFor(model => model.Emblem, new { htmlAttributes = new { @class = "form-control", @value = Model.Emblem } })
				@Html.ValidationMessageFor(model => model.Emblem, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			
			<div class="col-md-12">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align: left" })
				@Html.EditorFor(model => model.Discount, new { htmlAttributes = new { type = "number", min = "0", step = "1", max = "100", @class = "form-control", @value = decimal.ToInt32(Model.Discount) } })
				@Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			
			<div class="col-md-12">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align: left" })
				@{string sDate = Model.StartDate.Year + "-" + Model.StartDate.Month.ToString().PadLeft(2, '0') + "-" + Model.StartDate.Day.ToString().PadLeft(2, '0');
				}
				<input type="date" class="datepicker" data-val="true" data-val-date="The field Start date must be a date." data-val-required="The Start date field is required." id="StartDate" name="StartDate" value="@sDate" />
				@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
				<span id="StartDateValMsg" class="text-danger" style="display: none">Start date must be before end date.</span>
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-12">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align: left" })
				@{string eDate = Model.EndDate.Year + "-" + Model.EndDate.Month.ToString().PadLeft(2, '0') + "-" + Model.EndDate.Day.ToString().PadLeft(2, '0');
				}
				<input type="date" class="datepicker" data-val="true" data-val-date="The field End date must be a date." data-val-required="The End date field is required." id="EndDate" name="EndDate" value="@eDate" />
				@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
				<span id="EndDateValMsg" class="text-danger" style="display: none">End date must be after start date.</span>
			</div>
		</div>

		<br />

        <h3>Brands on Sale:</h3>
		
		<div class="form-group">
			@foreach(var b in Model.BrandsOnSale) {
				<div class="col-md-12">
					<input type="checkbox" checked id="@b.BrandName" name="CheckedBrands" value="@b.BrandID" />
					<label for="@b.BrandName">@b.BrandName</label>
					<br />
				</div>
			}
			@foreach(var b in Model.AllBrands) {
				<div class="col-md-12">
					<input type="checkbox" id="@b.BrandName" name="CheckedBrands" value="@b.BrandID" />
					<label for="@b.BrandName">@b.BrandName</label>
					<br />
				</div>
			}

		</div>

        <div class="btn-group">
            @Html.ActionLink("Back to Index", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
            <button id="submitButton" type="submit" class="btn btn-primary">Edit</button>
        </div>
	</div>
					}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	@*
		<script type="text/javascript">
			$("document").ready(function () {
				$(".datepicker").datepicker();
			});
		</script>
	*@

	<script type="text/javascript">
		$("form").on("submit", function (e) {

			var sDate = new Date($("#StartDate").val());
			var eDate = new Date($("#EndDate").val());

			if (sDate >= eDate) {
				$("#StartDateValMsg").show();
				$("#EndDateValMsg").show();
				// Stop form submission
				e.preventDefault();
			} else {
				$("#StartDateValMsg").hide();
				$("#EndDateValMsg").hide();
			}
		});
	</script>
}
