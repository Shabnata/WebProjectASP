@model IEnumerable<ShoppingSite.Models.ProductModel>

@{
	ViewBag.Title = "Index";
	Layout = (ViewBag.LayoutFile != null) ? ViewBag.LayoutFile : Layout;
}

<h2>Products Index</h2>

@using(Html.BeginForm("Search", "Products", FormMethod.Post)) {
	<input type="search" name="ProductName" placeholder="@Html.DisplayNameFor(model => model.ProductName)" value="@ViewBag.SearchString" path="@Url.Action("TypeSearch", "Products")" oninput="typeSearch(this)" autocomplete="on" required />
	<input type="submit" value="Search" />
	if(ViewBag.NotFoundError != null) {
		<span style="background: Red;">@ViewBag.NotFoundError</span>
		<br />
	}
}

@Html.ActionLink("Create Product", "Create")

<table class="table">
	<tr>
		<th>Cover</th>
		<th>@Html.DisplayNameFor(model => model.SKU)</th>
		<th>@Html.DisplayNameFor(model => model.ProductName)</th>
		<th>@Html.DisplayNameFor(model => model.Price)</th>
		<th>Brand</th>
		<th>@Html.DisplayNameFor(model => model.Description)</th>
		<th>Number of additional pictures</th>
		<th>Number of SubCategories</th>
		<th>Actions</th>
	</tr>

	@foreach(var item in Model) {
		<tr>
			<td>@Html.DisplayFor(modelItem => item.CoverPath)</td>		
			<td>@Html.DisplayFor(modelItem => item.SKU)</td>
			<td>@Html.DisplayFor(modelItem => item.ProductName)</td>
			<td>@Html.DisplayFor(modelItem => item.Price)</td>
			<td>@item.Brand.BrandName</td>
			<td>@Html.DisplayFor(modelItem => item.Description)</td>
			<td>@item.ProductPictures.Count</td>
			<td>@item.ProductCategories.Count</td>
			<td>
				@Html.ActionLink("Edit", "Edit", new { SKU = item.SKU }) |
				@Html.ActionLink("Details", "Details", new { SKU = item.SKU }) |
				@Html.ActionLink("Delete", "Delete", new { SKU = item.SKU })
			</td>
		</tr>
	}
</table>

@section scripts{
	@Scripts.Render("~/Scripts/AutoCompleteTypeSearch.js")
}